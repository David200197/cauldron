#!/usr/bin/php
<?php
	const BASE_DIR = "TheTrove";

	chdir(__DIR__."/..");
	require "libraries/banshee/protocol/http.php";

	function show_help() {
		global $argv;

		printf("%s: https://thetrove.is/<path>\n", $argv[0]);
	}

	class TheTroveDownload {
		const HOSTNAME = "thetrove.is";
		private $site = null;

		public function __construct() {
			$this->site = new \Banshee\Protocol\HTTPS(self::HOSTNAME);
		}

		public function get_dir($path) {
			printf("Entering %s.\n", urldecode($path));

			$parts = explode("/", rtrim($path, "/"));
			$dir = str_replace(" ", "_", urldecode(array_pop($parts)));
			if (file_exists($dir) == false) {
				mkdir($dir);
			}
			chdir($dir);

			if (($directory = $this->site->GET($path)) == false) {
				print "Network error while downloading directory index.\n";
				return false;
			}

			if ($directory["status"] != 200) {
				printf("HTTP error %d while downloading directory index.\n", $directory["status"]);
				return false;
			}

			$pos = 0;
			while (($pos = strpos($directory["body"], '<td class="link">', $pos)) !== false) {
				$pos += 17;

				if (($begin = strpos($directory["body"], '"', $pos)) === false) {
					break;
				}
				$begin++;

				if (($pos = strpos($directory["body"], '"', $begin)) === false) {
					break;
				}

				$link = substr($directory["body"], $begin, $pos - $begin);

				if (substr($link, 0, 1) == ".") {
					continue;
				}

				if (substr($link, -1) == "/") {
					$this->get_dir($path.$link);
				} else if (file_exists($link) == false) {
					$filename = urldecode($link);

					printf("- downloading %s.\n", $filename);
					if (($file = $this->site->GET($path.$link)) == false) {
						printf("  error downloading file.\n");
						continue;
					}
					if ($file["status"] != 200) {
						printf("  HTTP error %d while downloading file.\n", $file["status"]);
						continue;
					}

					$filename = str_replace(" ", "_", $filename);
					if (($fp = fopen($filename, "w")) != false) {
						fputs($fp, $file["body"]);
						fclose($fp);
					}
				}
			}

			chdir("..");
		}
	}

	error_reporting(E_ALL & ~E_NOTICE);

	if (count($argv) <= 1) {
		show_help();
		exit;
	}

	if (substr($argv[1], 0, 20) != "https://thetrove.is/") {
		show_help();
		exit;
	}

	$path = substr($argv[1], 19);
	if (strpos($path, " ") !== false) {
		$path = str_replace(" ", "%20", $path);
	}

	if (strlen($path) == 1) {
		show_help();
		exit;
	}

	if (file_exists(BASE_DIR) == false) {
		mkdir(BASE_DIR);
	}
	chdir(BASE_DIR);

	$trove = new TheTroveDownload();
	$trove->get_dir($path);
?>
